#!/bin/bash
export TABLE_EVENT=Events
export TABLE_USER=EventUsers
export DYNAMODB_ENDPOINT=http://localhost:8000
export AWS_REGION=us-east-1
export ALLOW_ORIGIN=http://localhost:3000

java -jar DynamoDBLocal.jar -sharedDb -inMemory >/dev/null & 
PID=$!
trap "kill -TERM $PID" TERM INT

aws --endpoint-url $DYNAMODB_ENDPOINT dynamodb create-table --table-name $TABLE_EVENT --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 >/dev/null
aws --endpoint-url $DYNAMODB_ENDPOINT dynamodb create-table --table-name $TABLE_USER --attribute-definitions AttributeName=eventId,AttributeType=S AttributeName=userName,AttributeType=S --key-schema AttributeName=eventId,KeyType=HASH AttributeName=userName,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 >/dev/null
aws --endpoint-url $DYNAMODB_ENDPOINT dynamodb put-item --table-name $TABLE_EVENT --item '{"id":{"S":"1"},"placeId":{"S":"ChIJ7VHBwnZ644kRKRWP5Qe27v4"},"eventName":{"S":"Royale"},"eventTime":{"N":'\"$(($(date +%s%N)/1000000))\"'}}'

node -e 'require("express")().use((req, res, next) => {req.body = ""; req.on("data", (d) => {req.body += d}); req.on("end", next);}).all("*", (req, res, next) => {require("./index").handler({httpMethod: req.method, path: req.path, queryStringParameters: req.query, body: req.body}, null, (err, data) => {res.status(data.statusCode).set(data.headers).send(data.body);});}).listen(3001, () => {console.log("DEV API server started at http://localhost:3001");});'

