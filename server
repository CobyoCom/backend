#!/bin/bash

node -e 'require("express")().use((req, res, next) => {req.body = ""; req.on("data", (d) => {req.body += d}); req.on("end", next);}).all("*", (req, res, next) => {require("./index").handler({httpMethod: req.method, path: req.path, queryParameters: req.query}, null, (err, data) => {res.status(data.statusCode).set(data.headers).send(data.body);});}).listen(3001, () => {console.log("DEV API server started at http://localhost:3001");});' &
PID1=$!
java -jar DynamoDBLocal.jar -sharedDb -inMemory &
PID2=$!
aws --endpoint-url http://localhost:8000 dynamodb create-table --table-name Events --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 >/dev/null
aws --endpoint-url http://localhost:8000 dynamodb create-table --table-name EventUsers --attribute-definitions AttributeName=eventId,AttributeType=S AttributeName=userName,AttributeType=S --key-schema AttributeName=eventId,KeyType=HASH AttributeName=userName,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 >/dev/null
ctime=$(($(date +%s%N)/1000000))
aws --endpoint-url http://localhost:8000 dynamodb put-item --table-name Events --item '{"id":{"S":"1"},"placeId":{"S":"ChIJ7VHBwnZ644kRKRWP5Qe27v4"},"eventName":{"S":"Royale"},"eventTime":{"S":"'"$ctime"'"}}'
trap "kill -TERM $PID1 $PID2" TERM INT
wait

